name: exo_angular
on:
  push:
    branches: [features/*, hotfix/*]
  pull_request:
    branches: [main, develop, features/*]

jobs:

  # Vérifie que le message de commit soit conventionnel ou non
  conventional_commits:
    if: github.event_name == 'push' && (startsWith(github.ref_name, 'hotfix') || startsWith(github.ref_name, 'features'))
    name: conventional_commits
    runs-on: ubuntu-latest

    steps:
      - name: Affichage du nom de branche & du message commit
        run: echo ${{github.ref_name}} && echo ${{github.event.head_commit.message}}

      - name: Vérification commit conventionnel sur les branches hotfix et features
        if: (!startsWith(github.event.head_commit.message, 'fix:' ) && !startsWith(github.event.head_commit.message, 'feat:'))
        run: echo "Le message du commit n'est pas conventionnel" && exit 1

  # Fait des tests sur différentes versions de node
  tests_on_node_versions:
    if: github.event_name == 'pull_request' && startsWith(github.head_ref, 'features') && startsWith(github.base_ref, 'develop')
    name: tests_on_node_versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: [14, 16]

    steps:

      - name: Lecture du code
        uses: actions/checkout@v3

      - run: echo ${{ github.head_ref }} && echo ${{ github.base_ref }}

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}

      - name: Test de node v${{ matrix.version }} et création de l'artefact
        run: |
          npm install
          npm run build --if-present
          npm test > artifact.txt

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: npm-test-result
          path: artifact.txt

      - name: Téléchargement artefact
        uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: read-file
        run: cat artifact.txt